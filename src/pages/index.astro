---
import type { SocialLinkType, LinkType } from '@utils/Interfaces'
import Base from '@layouts/Base.astro'
import Container from '@layouts/Container.astro'
import ContainerLinks from '@layouts/ContainerLinks.astro'
import ContainerSocialLinks from '@layouts/ContainerSocialLinks.astro'
import Bio from '@components/Bio.astro'
import SocialLink from '@components/SocialLink.astro'
import Link from '@components/Link.astro'
import content from '@content'

let socialLinks: SocialLinkType[] = []
let links: LinkType[] = []
let body: [] = [] // TODO: falta por implementar en JSON el body y otros contenidos
const { RESOURCES_FROM, JSON_REMOTE_DATA, JSONBIN_ACCESS_KEY } = import.meta.env
if (RESOURCES_FROM === 'json') {
  // Fetch en tiempo de compilaci√≥n, si cambia el contenido hay que volver a desplegar el proyecto
  const response = await fetch(JSON_REMOTE_DATA, {
    headers: {
      'X-Access-Key': JSONBIN_ACCESS_KEY
    }
  })
  const data = await response.json()
  socialLinks = data?.record?.socialLinks ?? []
  links = data?.record?.links ?? []
} else {
  socialLinks = content?.socialLinks ?? []
  links = content?.links ?? []
}
---

<Base siteName={content.site.name} metadata={content.metadata} footerData={content.body.footer}>
  <Container>
    <Bio
      title={content.body.title}
      avatar={content.body.avatar}
      bio={content.body.bio}
      titleDarkMode={content.body.titleDarkMode}
      avatarDarkMode={content.body.avatarDarkMode}
      bioDarkMode={content.body.bioDarkMode}
      subtitle={content.body.subtitle}
    />
    <ContainerLinks>
      <ContainerSocialLinks>
        {
          socialLinks.map((item: SocialLinkType) => (
            <SocialLink
              title={item?.title}
              url={item?.url}
              iconHoverColor={item?.iconHoverColor}
              iconHoverColorDark={item?.iconHoverColorDark}
              iconPack={item?.iconPack}
              iconName={item?.iconName}
            />
          ))
        }
      </ContainerSocialLinks>

      {
        links.map((item: LinkType) => (
          <Link
            title={item?.title}
            description={item?.description}
            url={item?.url}
            iconPack={item?.iconPack}
            iconName={item?.iconName}
            textColor={item?.textColor}
            textColorHover={item?.textColorHover}
            textColorHoverDark={item?.textColorHoverDark}
            isFirstElement={item?.isFirstElement}
            isLastElement={item?.isLastElement}
            download={item?.download}
          />
        ))
      }
    </ContainerLinks>
  </Container>
</Base>
