---
interface Props {
  useSystemDarkMode?: boolean
}
// https://github.com/natemoo-re/astro-icon#readme
import { Icon } from 'astro-icon'
const { useSystemDarkMode = true } = Astro.props
---

<button id="themeToggle" class="flex items-center mx-auto hover:text-green-800">
  <Icon class="sun" name="mdi:code" size={30} />
  <span class="sun ml-2">Enter the Matrix</span>
  <Icon class="moon" name="ph:sun-fill" size={30} />
</button>

<style>
  #themeToggle {
    border: 0;
    background: none;
  }
  .sun,
  :global(.dark) .moon {
    display: block;
  }
  .moon,
  :global(.dark) .sun {
    display: none;
  }
</style>

<script>
  // Script se ejecuta al inicio de la carga de página poniendo el modo que corresponda
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme') || 'light'
    }
    if (useSystemDarkMode && window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark'
    }
    return 'light'
  })()

  if (theme === 'light') {
    document.documentElement.classList.remove('dark')
  } else {
    document.documentElement.classList.add('dark')
  }

  window.localStorage.setItem('theme', theme)

  const handleToggleClick = () => {
    const element = document.documentElement
    element.classList.toggle('dark')

    const isDark = element.classList.contains('dark')
    localStorage.setItem('theme', isDark ? 'dark' : 'light')
  }
  // Código Typescript válido
  // var themeToggle = document.getElementById('themeToggle') as HTMLElement
  var themeToggle = document.querySelector<HTMLElement>('#themeToggle')
  if (themeToggle !== null) themeToggle.addEventListener('click', handleToggleClick)
</script>
